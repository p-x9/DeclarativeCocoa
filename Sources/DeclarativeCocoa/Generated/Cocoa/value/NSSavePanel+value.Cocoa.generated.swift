
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSSavePanel {
    @discardableResult
    @_disfavoredOverload
    public func validateVisibleColumns() -> T {
        self.value.validateVisibleColumns()
        return self.value
    }

    @available(macOS 10.6, *)
    @discardableResult
    @_disfavoredOverload
    public func beginSheetModal(for window: AppKit.NSWindow, completionHandler handler: @escaping (AppKit.NSApplication.ModalResponse) -> Swift.Void) -> T {
        self.value.beginSheetModal(for: window, completionHandler: handler)
        return self.value
    }

    @available(macOS 10.6, *)
    @discardableResult
    @_disfavoredOverload
    public func begin(completionHandler handler: @escaping (AppKit.NSApplication.ModalResponse) -> Swift.Void) -> T {
        self.value.begin(completionHandler: handler)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(macOS, unavailable, introduced: 10.0, deprecated: 10.6, message: "Use -setDirectoryURL: instead")
    public func setDirectory(_ path: Swift.String?) -> T {
        self.value.setDirectory(path)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(macOS, unavailable, introduced: 10.0, deprecated: 10.6, message: "Use -setAllowedFileTypes: instead")
    public func setRequiredFileType(_ type: Swift.String?) -> T {
        self.value.setRequiredFileType(type)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(macOS, unavailable, introduced: 10.0, deprecated: 10.6, message: "Use beginSheetModalForWindow:completionHandler: instead. The following parameters are replaced by properties: 'path' is replaced by 'directoryURL' and 'name' by 'nameFieldStringValue'.")
    public func beginSheet(forDirectory path: Swift.String, file name: Swift.String?, modalFor docWindow: AppKit.NSWindow?, modalDelegate delegate: Any?, didEnd didEndSelector: ObjectiveC.Selector?, contextInfo: Swift.UnsafeMutableRawPointer?) -> T {
        self.value.beginSheet(forDirectory: path, file: name, modalFor: docWindow, modalDelegate: delegate, didEnd: didEndSelector, contextInfo: contextInfo)
        return self.value
    }
}

#endif
