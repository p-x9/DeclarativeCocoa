
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSTabViewController {
    @discardableResult
    @_disfavoredOverload
    public func addTabViewItem(_ tabViewItem: AppKit.NSTabViewItem) -> T {
        self.value.addTabViewItem(tabViewItem)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func insertTabViewItem(_ tabViewItem: AppKit.NSTabViewItem, at index: Swift.Int) -> T {
        self.value.insertTabViewItem(tabViewItem, at: index)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func removeTabViewItem(_ tabViewItem: AppKit.NSTabViewItem) -> T {
        self.value.removeTabViewItem(tabViewItem)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @_Concurrency.MainActor public func tabView(_ tabView: AppKit.NSTabView, willSelect tabViewItem: AppKit.NSTabViewItem?) -> T {
        self.value.tabView(tabView, willSelect: tabViewItem)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @_Concurrency.MainActor public func tabView(_ tabView: AppKit.NSTabView, didSelect tabViewItem: AppKit.NSTabViewItem?) -> T {
        self.value.tabView(tabView, didSelect: tabViewItem)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    @_Concurrency.MainActor public func tabViewDidChangeNumberOfTabViewItems(_ tabView: AppKit.NSTabView) -> T {
        self.value.tabViewDidChangeNumberOfTabViewItems(tabView)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    @_Concurrency.MainActor public func toolbarWillAddItem(_ notification: Foundation.Notification) -> T {
        self.value.toolbarWillAddItem(notification)
        return self.value
    }

    @available(macOS 10.10, *)
    @discardableResult
    @_disfavoredOverload
    @_Concurrency.MainActor public func toolbarDidRemoveItem(_ notification: Foundation.Notification) -> T {
        self.value.toolbarDidRemoveItem(notification)
        return self.value
    }
}

#endif
