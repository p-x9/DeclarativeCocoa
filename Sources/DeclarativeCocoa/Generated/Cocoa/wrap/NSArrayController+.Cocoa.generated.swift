
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSArrayController {
    @discardableResult
    public func rearrangeObjects() -> Self {
        self.value.rearrangeObjects()
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.5, *)
    @discardableResult
    public func didChangeArrangementCriteria() -> Self {
        self.value.didChangeArrangementCriteria()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func add(contentsOf objects: [Any]) -> Self {
        self.value.add(contentsOf: objects)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func insert(_ object: Any, atArrangedObjectIndex index: Swift.Int) -> Self {
        self.value.insert(object, atArrangedObjectIndex: index)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func insert(contentsOf objects: [Any], atArrangedObjectIndexes indexes: Foundation.IndexSet) -> Self {
        self.value.insert(contentsOf: objects, atArrangedObjectIndexes: indexes)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func remove(atArrangedObjectIndex index: Swift.Int) -> Self {
        self.value.remove(atArrangedObjectIndex: index)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func remove(atArrangedObjectIndexes indexes: Foundation.IndexSet) -> Self {
        self.value.remove(atArrangedObjectIndexes: indexes)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func remove(contentsOf objects: [Any]) -> Self {
        self.value.remove(contentsOf: objects)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
