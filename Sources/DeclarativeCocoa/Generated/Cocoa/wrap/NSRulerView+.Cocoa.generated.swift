
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSRulerView {
    @discardableResult
    public func addMarker(_ marker: AppKit.NSRulerMarker) -> Self {
        self.value.addMarker(marker)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func removeMarker(_ marker: AppKit.NSRulerMarker) -> Self {
        self.value.removeMarker(marker)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func moveRulerline(fromLocation oldLocation: CoreFoundation.CGFloat, toLocation newLocation: CoreFoundation.CGFloat) -> Self {
        self.value.moveRulerline(fromLocation: oldLocation, toLocation: newLocation)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func invalidateHashMarks() -> Self {
        self.value.invalidateHashMarks()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func drawHashMarksAndLabels(in rect: Foundation.NSRect) -> Self {
        self.value.drawHashMarksAndLabels(in: rect)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func drawMarkers(in rect: Foundation.NSRect) -> Self {
        self.value.drawMarkers(in: rect)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
