
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSTreeController {
    @discardableResult
    public func rearrangeObjects() -> Self {
        self.value.rearrangeObjects()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func insert(_ object: Any?, atArrangedObjectIndexPath indexPath: Foundation.IndexPath) -> Self {
        self.value.insert(object, atArrangedObjectIndexPath: indexPath)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func insert(_ objects: [Any], atArrangedObjectIndexPaths indexPaths: [Foundation.IndexPath]) -> Self {
        self.value.insert(objects, atArrangedObjectIndexPaths: indexPaths)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func removeObject(atArrangedObjectIndexPath indexPath: Foundation.IndexPath) -> Self {
        self.value.removeObject(atArrangedObjectIndexPath: indexPath)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func removeObjects(atArrangedObjectIndexPaths indexPaths: [Foundation.IndexPath]) -> Self {
        self.value.removeObjects(atArrangedObjectIndexPaths: indexPaths)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.5, *)
    @discardableResult
    public func move(_ node: AppKit.NSTreeNode, to indexPath: Foundation.IndexPath) -> Self {
        self.value.move(node, to: indexPath)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(macOS 10.5, *)
    @discardableResult
    public func move(_ nodes: [AppKit.NSTreeNode], to startingIndexPath: Foundation.IndexPath) -> Self {
        self.value.move(nodes, to: startingIndexPath)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
