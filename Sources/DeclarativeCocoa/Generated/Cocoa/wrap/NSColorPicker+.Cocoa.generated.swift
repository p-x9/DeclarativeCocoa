
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(Cocoa)
import Cocoa

extension Modify.DynamicMemberWrap where T: NSColorPicker {
    @discardableResult
    @_Concurrency.MainActor public func insertNewButtonImage(_ newButtonImage: AppKit.NSImage, in buttonCell: AppKit.NSButtonCell) -> Self {
        self.value.insertNewButtonImage(newButtonImage, in: buttonCell)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    @_Concurrency.MainActor public func viewSizeChanged(_ sender: Any?) -> Self {
        self.value.viewSizeChanged(sender)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    @_Concurrency.MainActor public func attachColorList(_ colorList: AppKit.NSColorList) -> Self {
        self.value.attachColorList(colorList)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    @_Concurrency.MainActor public func detachColorList(_ colorList: AppKit.NSColorList) -> Self {
        self.value.detachColorList(colorList)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    @_Concurrency.MainActor public func setMode(_ mode: AppKit.NSColorPanel.Mode) -> Self {
        self.value.setMode(mode)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    @_Concurrency.MainActor public func alphaControlAddedOrRemoved(_ sender: Any?) -> Self {
        self.value.alphaControlAddedOrRemoved(sender)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
