
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UICollectionReusableView {
    @discardableResult
    public func prepareForReuse() -> Self {
        self.value.prepareForReuse()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func apply(_ layoutAttributes: UICollectionViewLayoutAttributes) -> Self {
        self.value.apply(layoutAttributes)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func willTransition(from oldLayout: UICollectionViewLayout, to newLayout: UICollectionViewLayout) -> Self {
        self.value.willTransition(from: oldLayout, to: newLayout)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func didTransition(from oldLayout: UICollectionViewLayout, to newLayout: UICollectionViewLayout) -> Self {
        self.value.didTransition(from: oldLayout, to: newLayout)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
