
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UIActionSheet {
    @discardableResult
    public func show(from view: UIKit.UIToolbar) -> Self {
        self.value.show(from: view)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func show(from view: UIKit.UITabBar) -> Self {
        self.value.show(from: view)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 3.2, *)
    @discardableResult
    public func show(from item: UIKit.UIBarButtonItem, animated: Swift.Bool) -> Self {
        self.value.show(from: item, animated: animated)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 3.2, *)
    @discardableResult
    public func show(from rect: CoreFoundation.CGRect, in view: UIKit.UIView, animated: Swift.Bool) -> Self {
        self.value.show(from: rect, in: view, animated: animated)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func show(in view: UIKit.UIView) -> Self {
        self.value.show(in: view)
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func dismiss(withClickedButtonIndex buttonIndex: Swift.Int, animated: Swift.Bool) -> Self {
        self.value.dismiss(withClickedButtonIndex: buttonIndex, animated: animated)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
