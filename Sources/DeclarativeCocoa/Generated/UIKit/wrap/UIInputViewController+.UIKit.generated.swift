
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UIInputViewController {
    @discardableResult
    public func dismissKeyboard() -> Self {
        self.value.dismissKeyboard()
        return Modify.DynamicMemberWrap(self.value)
    }

    @discardableResult
    public func advanceToNextInputMode() -> Self {
        self.value.advanceToNextInputMode()
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 10.0, *)
    @discardableResult
    public func handleInputModeList(from view: UIKit.UIView, with event: UIKit.UIEvent) -> Self {
        self.value.handleInputModeList(from: view, with: event)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 8.0, *)
    @discardableResult
    public func selectionWillChange(_ textInput: UIKit.UITextInput?) -> Self {
        self.value.selectionWillChange(textInput)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 8.0, *)
    @discardableResult
    public func selectionDidChange(_ textInput: UIKit.UITextInput?) -> Self {
        self.value.selectionDidChange(textInput)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 8.0, *)
    @discardableResult
    public func textWillChange(_ textInput: UIKit.UITextInput?) -> Self {
        self.value.textWillChange(textInput)
        return Modify.DynamicMemberWrap(self.value)
    }

    @available(iOS 8.0, *)
    @discardableResult
    public func textDidChange(_ textInput: UIKit.UITextInput?) -> Self {
        self.value.textDidChange(textInput)
        return Modify.DynamicMemberWrap(self.value)
    }
}

#endif
