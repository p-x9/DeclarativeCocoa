
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UIDocumentInteractionController {
    @discardableResult
    @_disfavoredOverload
    public func dismissPreview(animated: Swift.Bool) -> T {
        self.value.dismissPreview(animated: animated)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func dismissMenu(animated: Swift.Bool) -> T {
        self.value.dismissMenu(animated: animated)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func actionSheet(_ actionSheet: UIKit.UIActionSheet, clickedButtonAt buttonIndex: Swift.Int) -> T {
        self.value.actionSheet(actionSheet, clickedButtonAt: buttonIndex)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func actionSheetCancel(_ actionSheet: UIKit.UIActionSheet) -> T {
        self.value.actionSheetCancel(actionSheet)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func willPresent(_ actionSheet: UIKit.UIActionSheet) -> T {
        self.value.willPresent(actionSheet)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func didPresent(_ actionSheet: UIKit.UIActionSheet) -> T {
        self.value.didPresent(actionSheet)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func actionSheet(_ actionSheet: UIKit.UIActionSheet, willDismissWithButtonIndex buttonIndex: Swift.Int) -> T {
        self.value.actionSheet(actionSheet, willDismissWithButtonIndex: buttonIndex)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 2.0, deprecated: 8.3, message: "Use UIAlertController instead.")
    public func actionSheet(_ actionSheet: UIKit.UIActionSheet, didDismissWithButtonIndex buttonIndex: Swift.Int) -> T {
        self.value.actionSheet(actionSheet, didDismissWithButtonIndex: buttonIndex)
        return self.value
    }
}

#endif
