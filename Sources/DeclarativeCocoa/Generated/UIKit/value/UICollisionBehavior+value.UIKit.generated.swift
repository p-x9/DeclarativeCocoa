
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UICollisionBehavior {
    @discardableResult
    @_disfavoredOverload
    public func addItem(_ item: UIKit.UIDynamicItem) -> T {
        self.value.addItem(item)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func removeItem(_ item: UIKit.UIDynamicItem) -> T {
        self.value.removeItem(item)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func setTranslatesReferenceBoundsIntoBoundary(with insets: UIKit.UIEdgeInsets) -> T {
        self.value.setTranslatesReferenceBoundsIntoBoundary(with: insets)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func addBoundary(withIdentifier identifier: Foundation.NSCopying, for bezierPath: UIKit.UIBezierPath) -> T {
        self.value.addBoundary(withIdentifier: identifier, for: bezierPath)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func addBoundary(withIdentifier identifier: Foundation.NSCopying, from p1: CoreFoundation.CGPoint, to p2: CoreFoundation.CGPoint) -> T {
        self.value.addBoundary(withIdentifier: identifier, from: p1, to: p2)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func removeBoundary(withIdentifier identifier: Foundation.NSCopying) -> T {
        self.value.removeBoundary(withIdentifier: identifier)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func removeAllBoundaries() -> T {
        self.value.removeAllBoundaries()
        return self.value
    }
}

#endif
