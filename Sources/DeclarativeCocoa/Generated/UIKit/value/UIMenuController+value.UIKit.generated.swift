
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UIMenuController {
    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 3.0, deprecated: 13.0, message: "Use showMenuFromView:rect: or hideMenuFromView: instead.")
    public func setMenuVisible(_ menuVisible: Swift.Bool, animated: Swift.Bool) -> T {
        self.value.setMenuVisible(menuVisible, animated: animated)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    @available(iOS, introduced: 3.0, deprecated: 13.0, message: "Use showMenuFromView:rect: instead.")
    public func setTargetRect(_ targetRect: CoreFoundation.CGRect, in targetView: UIKit.UIView) -> T {
        self.value.setTargetRect(targetRect, in: targetView)
        return self.value
    }

    @available(iOS 13.0, *)
    @discardableResult
    @_disfavoredOverload
    public func showMenu(from targetView: UIKit.UIView, rect targetRect: CoreFoundation.CGRect) -> T {
        self.value.showMenu(from: targetView, rect: targetRect)
        return self.value
    }

    @available(iOS 13.0, *)
    @discardableResult
    @_disfavoredOverload
    public func hideMenu(from targetView: UIKit.UIView) -> T {
        self.value.hideMenu(from: targetView)
        return self.value
    }

    @available(iOS 13.0, *)
    @discardableResult
    @_disfavoredOverload
    public func hideMenu() -> T {
        self.value.hideMenu()
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func update() -> T {
        self.value.update()
        return self.value
    }
}

#endif
