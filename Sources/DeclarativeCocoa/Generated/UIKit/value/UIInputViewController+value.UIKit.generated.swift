
// Generated file
// DO NOT EDIT THIS FILE

#if canImport(UIKit)
import UIKit

extension Modify.DynamicMemberWrap where T: UIInputViewController {
    @discardableResult
    @_disfavoredOverload
    public func dismissKeyboard() -> T {
        self.value.dismissKeyboard()
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func advanceToNextInputMode() -> T {
        self.value.advanceToNextInputMode()
        return self.value
    }

    @available(iOS 10.0, *)
    @discardableResult
    @_disfavoredOverload
    public func handleInputModeList(from view: UIKit.UIView, with event: UIKit.UIEvent) -> T {
        self.value.handleInputModeList(from: view, with: event)
        return self.value
    }

    @available(iOS 8.0, *)
    @discardableResult
    @_disfavoredOverload
    public func selectionWillChange(_ textInput: UIKit.UITextInput?) -> T {
        self.value.selectionWillChange(textInput)
        return self.value
    }

    @available(iOS 8.0, *)
    @discardableResult
    @_disfavoredOverload
    public func selectionDidChange(_ textInput: UIKit.UITextInput?) -> T {
        self.value.selectionDidChange(textInput)
        return self.value
    }

    @available(iOS 8.0, *)
    @discardableResult
    @_disfavoredOverload
    public func textWillChange(_ textInput: UIKit.UITextInput?) -> T {
        self.value.textWillChange(textInput)
        return self.value
    }

    @available(iOS 8.0, *)
    @discardableResult
    @_disfavoredOverload
    public func textDidChange(_ textInput: UIKit.UITextInput?) -> T {
        self.value.textDidChange(textInput)
        return self.value
    }
}

#endif
